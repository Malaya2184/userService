spring.application.name=userservice

#to set the server port number
server.port=3030
#stting the tie zone to india so that it will return value in ist
-Duser.timezone=Asia/Kolkata
# database connect
# persistent layer - hybernate
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=${USER_SERVICE_DATABASE_URL}
spring.datasource.username=${USER_SERVICE_DATABASE_USERNAME}
spring.datasource.password=${USER_SERVICE_DATABASE_PASSWORD}

#prod - pwd = Me_1#
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
# used this line because my dialect was not set automatically to talk with hybrnate
# error I got - org.hibernate.HibernateException: Access to DialectResolutionInfo cannot be null when 'hibernate.dialect' not set
#spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.boot.admin.jmx.enabled=true

#used when you db has data already and you want to change on the top of your db
#spring.flyway.baseline-on-migrate=true


# to use oauth2 minm requirements if you dont have a config file
logging.level.org.springframework.security=TRACE

#spring.security.user.name=user
#spring.security.user.password=password

#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://127.0.0.1:3030
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://127.0.0.1:8080
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile
#spring.security.oauth2.oidc-client.registration.require-authorization-consent=true
##authentiction provider
#spring.security.authentication.provider.reference=customAuthenticationProvider
